const calendar = document.getElementById("calendar");
const currentMonth = document.getElementById("currentMonth");
const prevMonth = document.getElementById("prevMonth");
const nextMonth = document.getElementById("nextMonth");
const noHabitsMessage = document.getElementById("noHabitsMessage");

let currentDate = new Date(2024, 10); // –ù–æ—è–±—Ä—å 2024
let completedDays = {};

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞
function renderCalendar() {
  calendar.innerHTML = "";
  const month = currentDate.getMonth();
  const year = currentDate.getFullYear();
  const daysInMonth = new Date(year, month + 1, 0).getDate();

  // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
  const headerRow = document.createElement("tr");
  const habitHeader = document.createElement("th");
  habitHeader.textContent = "–ü—Ä–∏–≤—ã—á–∫–∏";
  headerRow.appendChild(habitHeader);

  for (let day = 1; day <= daysInMonth; day++) {
    const dayHeader = document.createElement("th");
    dayHeader.textContent = day;
    headerRow.appendChild(dayHeader);
  }
  calendar.appendChild(headerRow);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–∏–≤—ã—á–µ–∫
  if (habits.length === 0) {
    noHabitsMessage.style.display = "block";
    goalList.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π
    return;
  } else {
    noHabitsMessage.style.display = "none";
  }

  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–∏–≤—ã—á–∫–∏
  habits.forEach((habit, index) => {
    const habitRow = document.createElement("tr");
    const habitCell = document.createElement("td");
    habitCell.textContent = habit.text;
    habitCell.classList.add("habit-cell");
    habitRow.appendChild(habitCell);

    // –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
    const buttonsDiv = document.createElement("div");
    buttonsDiv.classList.add("edit-delete-buttons");

    const editButton = document.createElement("button");
    editButton.textContent = "‚úèÔ∏è"; // –∏–∫–æ–Ω–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    editButton.onclick = () => openEditHabitModal(index);

    const deleteButton = document.createElement("button");
    deleteButton.textContent = "üóëÔ∏è"; // –∏–∫–æ–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    deleteButton.onclick = () => openDeleteHabitModal(index);
    buttonsDiv.appendChild(editButton);
    buttonsDiv.appendChild(deleteButton);
    habitCell.appendChild(buttonsDiv);

    // –î–æ–±–∞–≤–ª—è–µ–º —è—á–µ–π–∫–∏ –¥–ª—è –¥–Ω–µ–π –º–µ—Å—è—Ü–∞
    for (let day = 1; day <= daysInMonth; day++) {
      const dayCell = document.createElement("td");
      const monthYearKey = `${year}-${month + 1}`; // –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π
      const completedDaysForHabit =
        completedDays[monthYearKey]?.[habit.text] || [];

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –¥–µ–Ω—å –≤—ã–ø–æ–ª–Ω–µ–Ω
      if (completedDaysForHabit.includes(day)) {
        dayCell.classList.add("completed");
      }

      dayCell.addEventListener("click", () =>
        toggleHabit(habit.text, day, dayCell)
      );
      habitRow.appendChild(dayCell);
    }
    calendar.appendChild(habitRow);
  });

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
  currentMonth.textContent = `${currentDate.toLocaleString("default", {
    month: "long",
  })} ${year}`;
  renderGoals();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –º–µ—Å—è—Ü–∞–º–∏
prevMonth.onclick = function () {
  currentDate.setMonth(currentDate.getMonth() - 1);
  renderCalendar();
};

nextMonth.onclick = function () {
  currentDate.setMonth(currentDate.getMonth() + 1);
  renderCalendar();
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏
function toggleHabit(habitText, day, dayCell) {
  const monthYearKey = `${currentDate.getFullYear()}-${
    currentDate.getMonth() + 1
  }`;
  if (!completedDays[monthYearKey]) {
    completedDays[monthYearKey] = {};
  }
  if (!completedDays[monthYearKey][habitText]) {
    completedDays[monthYearKey][habitText] = [];
  }

  const completedDaysForHabit = completedDays[monthYearKey][habitText];
  const dayIndex = completedDaysForHabit.indexOf(day);
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –ø—Ä–∏–≤—ã—á–∫–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
  if (dayIndex > -1) {
    completedDaysForHabit.splice(dayIndex, 1);
    dayCell.classList.remove("completed");
  }
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –ø—Ä–∏–≤—ã—á–∫–∞ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
  else {
    completedDaysForHabit.push(day);
    dayCell.classList.add("completed");
  }
  renderGoals(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
renderCalendar();
